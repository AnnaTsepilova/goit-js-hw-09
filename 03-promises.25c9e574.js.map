{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAO,CACXC,gBAAiBC,SAASC,cAAc,qBACxCC,eAAgBF,SAASC,cAAc,oBACvCE,YAAaH,SAASC,cAAc,sBACpCG,kBAAmBJ,SAASC,cAAc,WAsB5C,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA9BbT,EAAKM,kBAAkBW,iBAAiB,SAAUC,IAChDA,EAAMC,iBAEN,IAAIC,EAAYC,OAAOC,SAAStB,EAAKC,gBAAgBsB,OAErD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,OAAOC,SAAStB,EAAKK,YAAYkB,OAAQC,GAAK,EAChEjB,EAAciB,EAAGJ,GACdK,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA4B,OAAOC,QAAQ,qBAAqBnB,QAAeC,MAAU,IAE9DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA4B,OAAOG,QAAQ,oBAAoBrB,QAAeC,MAAU,IAEhEW,GAAaC,OAAOC,SAAStB,EAAKI,eAAemB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\nconst refs = {\n  firstDelayInput: document.querySelector(\"input[name=delay]\"),\n  delayStepInput: document.querySelector(\"input[name=step]\"),\n  amountInput: document.querySelector(\"input[name=amount]\"),\n  createPromisesBtn: document.querySelector(\"button\"),\n}\n\nrefs.createPromisesBtn.addEventListener('click', (event) => {\n  event.preventDefault();\n\n  let delayTime = Number.parseInt(refs.firstDelayInput.value);\n\n  for (let i = 0; i < Number.parseInt(refs.amountInput.value); i += 1) {\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delayTime += Number.parseInt(refs.delayStepInput.value);\n  }\n\n  \n});\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n      \n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","firstDelayInput","document","querySelector","delayStepInput","amountInput","createPromisesBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayTime","Number","parseInt","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.25c9e574.js.map"}